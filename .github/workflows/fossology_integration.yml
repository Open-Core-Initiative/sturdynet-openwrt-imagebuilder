name: Fossolgy Scanner

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["test"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: sudo apt-get update && sudo apt-get install zip -y
      - run: echo "REPO_NAME=imagebuilder" >> $GITHUB_ENV
      - run: zip -r ${{ env.REPO_NAME }}-${GITHUB_REF##*/}.zip . -x '*.git*'
      - run: echo "TOKEN_EXPIRY_DATE=$(date -d '+1 day' '+%Y-%m-%d')" >> $GITHUB_ENV
      - run: echo "TOKEN_NAME=${{ env.REPO_NAME }}-$(date '+%H%M%d%m+%Y%S')" >> $GITHUB_ENV # Token name should not exceed 40 characters.
      - run: echo "UPLOAD_FILE_PATH=${GITHUB_WORKSPACE}/${{ env.REPO_NAME }}-${GITHUB_REF##*/}.zip" >> $GITHUB_ENV
      - name: LOGIN TO FOSSOLOGY
        run: |
          FOSSY_LOGIN_RESPONSE=$( \
          curl --request POST \
          --location '${{ secrets.FOSSY_BASE_URL }}/api/v1/tokens' \
          --header 'Content-Type:application/json' \
          --data '{"username":"${{ secrets.FOSSY_USERNAME }}","password":"${{ secrets.FOSSY_USERNAME }}","token_name":"${{ env.TOKEN_NAME }}","token_scope":"write","token_expire":"${{ env.TOKEN_EXPIRY_DATE }}"}' \
          )
          echo ::add-mask::$FOSSY_LOGIN_RESPONSE
          echo FOSSY_LOGIN_RESPONSE="$FOSSY_LOGIN_RESPONSE" >> $GITHUB_ENV
      - name: GETTING FOSSOLOGY BEARER TOKEN
        run: |
          FOSSY_BEARER_TOKEN=$( \
          echo $FOSSY_LOGIN_RESPONSE | sed "s/{.*\"Authorization\":\"\([^\"]*\).*}/\1/g" \
          )
          echo ::add-mask::$FOSSY_BEARER_TOKEN
          echo FOSSY_BEARER_TOKEN="$FOSSY_BEARER_TOKEN" >> $GITHUB_ENV
      - name: MANAGING ZIP FILE PERMISSIONS
        run: chmod 777 ${{ env.REPO_NAME }}-${GITHUB_REF##*/}.zip && ls -l
      - name: UPLOADING ZIP FILE TO FOSSOLOGY
        run: |
          curl -v --location '${{ secrets.FOSSY_BASE_URL }}/api/v1/uploads' \
          --header 'Authorization: ${{ env.FOSSY_BEARER_TOKEN }}' \
          --header 'folderId: 1' \
          --header 'uploadDescription: ${{ env.TOKEN_NAME }} Upload' \
          --header 'uploadType: file' \
          --header 'public: public' \
          --form 'fileInput=@"${{ env.UPLOAD_FILE_PATH }}"'
